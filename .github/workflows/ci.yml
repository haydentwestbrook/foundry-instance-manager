name: CI/CD

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for proper versioning
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Install dependencies
      run: |
        poetry install
        pip install pre-commit

    - name: Run linting
      run: |
        poetry run black . --check
        poetry run isort . --check
        poetry run flake8 .
        poetry run mypy foundry_manager/

    - name: Run unit tests
      run: |
        poetry run pytest tests/ -v

    - name: Configure Git
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git

    - name: Bump version
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Temporarily disable pre-commit hooks
        git config --unset core.hooksPath || true
        # Bump version
        poetry run bump2version patch
        # Re-enable pre-commit hooks
        git config core.hooksPath .git/hooks
        # Run pre-commit hooks manually
        pre-commit run --all-files
        # Commit any changes from pre-commit hooks
        git add .
        git commit -m "Apply pre-commit fixes" || true
        # Push changes
        git push origin HEAD:main
        git push --tags

    - name: Generate changelog
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
      run: |
        poetry run git-changelog -o CHANGELOG.md .

    - name: Build package
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
      run: |
        poetry build

    - name: Create GitHub Release
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*
        body_path: CHANGELOG.md
        generate_release_notes: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to PyPI
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
      run: |
        poetry publish --no-interaction
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
